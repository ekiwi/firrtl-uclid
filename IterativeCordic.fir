;buildInfoPackage: chisel3, version: 3.2-SNAPSHOT, scalaVersion: 2.12.6, sbtVersion: 1.2.7
circuit IterativeCordic : 
  module IterativeCordic : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {x : Fixed<12><<10>>, y : Fixed<12><<10>>, z : Fixed<12><<9>>, vectoring : UInt<1>}}, out : {flip ready : UInt<1>, valid : UInt<1>, bits : {x : Fixed<12><<10>>, y : Fixed<12><<10>>, z : Fixed<12><<9>>}}}
    
    reg vecReg : UInt<1>, clock @[Cordic.scala 131:19]
    reg xyz : {x : Fixed<18><<15>>, y : Fixed<18><<15>>, z : Fixed<18><<15>>}, clock @[Cordic.scala 134:16]
    wire xyzn : {x : Fixed<18><<15>>, y : Fixed<18><<15>>, z : Fixed<18><<15>>}[2] @[Cordic.scala 137:18]
    reg counter : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[Cordic.scala 140:24]
    wire alpha : Fixed<16><<15>>[12] @[Cordic.scala 143:22]
    alpha[0] <= asFixedPoint(UInt<16>("h06488"), 15) @[Cordic.scala 143:22]
    alpha[1] <= asFixedPoint(UInt<15>("h03b59"), 15) @[Cordic.scala 143:22]
    alpha[2] <= asFixedPoint(UInt<14>("h01f5b"), 15) @[Cordic.scala 143:22]
    alpha[3] <= asFixedPoint(UInt<13>("h0feb"), 15) @[Cordic.scala 143:22]
    alpha[4] <= asFixedPoint(UInt<12>("h07fd"), 15) @[Cordic.scala 143:22]
    alpha[5] <= asFixedPoint(UInt<12>("h0400"), 15) @[Cordic.scala 143:22]
    alpha[6] <= asFixedPoint(UInt<11>("h0200"), 15) @[Cordic.scala 143:22]
    alpha[7] <= asFixedPoint(UInt<10>("h0100"), 15) @[Cordic.scala 143:22]
    alpha[8] <= asFixedPoint(UInt<9>("h080"), 15) @[Cordic.scala 143:22]
    alpha[9] <= asFixedPoint(UInt<8>("h040"), 15) @[Cordic.scala 143:22]
    alpha[10] <= asFixedPoint(UInt<7>("h020"), 15) @[Cordic.scala 143:22]
    alpha[11] <= asFixedPoint(UInt<6>("h010"), 15) @[Cordic.scala 143:22]
    node _T = bits(io.in.bits.x, 11, 11) @[FixedPointTypeClass.scala 181:24]
    node _T_1 = bits(io.in.bits.z, 11, 11) @[FixedPointTypeClass.scala 181:24]
    node _T_2 = sub(asFixedPoint(UInt<1>("h00"), 0), io.in.bits.z) @[FixedPointTypeClass.scala 31:68]
    node _T_3 = tail(_T_2, 1) @[FixedPointTypeClass.scala 31:68]
    node _T_4 = asFixedPoint(_T_3, 9) @[FixedPointTypeClass.scala 31:68]
    node _T_5 = mux(_T_1, _T_4, io.in.bits.z) @[FixedPointTypeClass.scala 204:8]
    node _T_6 = gt(_T_5, asFixedPoint(UInt<17>("h0c910"), 15)) @[FixedPointTypeClass.scala 56:59]
    node ext = mux(io.in.bits.vectoring, _T, _T_6) @[Cordic.scala 148:16]
    node _T_7 = bits(io.in.bits.y, 11, 11) @[FixedPointTypeClass.scala 181:24]
    node _T_8 = bits(io.in.bits.z, 11, 11) @[FixedPointTypeClass.scala 181:24]
    node bottom = mux(io.in.bits.vectoring, _T_7, _T_8) @[Cordic.scala 149:19]
    reg extReg : UInt<1>, clock @[Cordic.scala 150:30]
    reg bottomReg : UInt<1>, clock @[Cordic.scala 150:30]
    reg inReady : UInt<1>, clock with : (reset => (reset, UInt<1>("h01"))) @[Cordic.scala 155:24]
    io.in.ready <= inReady @[Cordic.scala 156:15]
    reg outValid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Cordic.scala 157:25]
    io.out.valid <= outValid @[Cordic.scala 158:16]
    node _T_9 = and(io.in.ready, io.in.valid) @[Decoupled.scala 37:37]
    when _T_9 : @[Cordic.scala 161:23]
      inReady <= UInt<1>("h00") @[Cordic.scala 162:13]
      vecReg <= io.in.bits.vectoring @[Cordic.scala 163:12]
      extReg <= ext @[Cordic.scala 164:12]
      bottomReg <= bottom @[Cordic.scala 165:15]
      node _T_10 = mul(asFixedPoint(UInt<1>("h01"), 0), io.in.bits.y) @[FixedPointTypeClass.scala 43:59]
      node _T_11 = mux(bottom, _T_10, io.in.bits.y) @[Cordic.scala 166:26]
      node _T_12 = mux(ext, _T_11, io.in.bits.x) @[Cordic.scala 166:17]
      xyz.x <= _T_12 @[Cordic.scala 166:11]
      node _T_13 = mul(asFixedPoint(UInt<1>("h01"), 0), io.in.bits.x) @[FixedPointTypeClass.scala 43:59]
      node _T_14 = mux(bottom, io.in.bits.x, _T_13) @[Cordic.scala 167:25]
      node _T_15 = mux(ext, _T_14, io.in.bits.y) @[Cordic.scala 167:16]
      xyz.y <= _T_15 @[Cordic.scala 167:10]
      node _T_16 = mul(asFixedPoint(UInt<1>("h01"), 0), asFixedPoint(UInt<17>("h0c910"), 15)) @[FixedPointTypeClass.scala 43:59]
      node _T_17 = mux(bottom, asFixedPoint(UInt<17>("h0c910"), 15), _T_16) @[Cordic.scala 168:26]
      node _T_18 = add(_T_17, io.in.bits.z) @[FixedPointTypeClass.scala 21:58]
      node _T_19 = tail(_T_18, 1) @[FixedPointTypeClass.scala 21:58]
      node _T_20 = asFixedPoint(_T_19, 15) @[FixedPointTypeClass.scala 21:58]
      node _T_21 = mux(ext, _T_20, io.in.bits.z) @[Cordic.scala 168:17]
      xyz.z <= _T_21 @[Cordic.scala 168:11]
      skip @[Cordic.scala 161:23]
    node _T_22 = eq(inReady, UInt<1>("h00")) @[Cordic.scala 172:9]
    node _T_23 = lt(counter, UInt<4>("h0c")) @[Cordic.scala 172:29]
    node _T_24 = and(_T_22, _T_23) @[Cordic.scala 172:18]
    when _T_24 : @[Cordic.scala 172:51]
      node _T_25 = add(counter, UInt<1>("h01")) @[Cordic.scala 173:24]
      node _T_26 = tail(_T_25, 1) @[Cordic.scala 173:24]
      counter <= _T_26 @[Cordic.scala 173:13]
      xyz.z <= xyzn[1].z @[Cordic.scala 175:9]
      xyz.y <= xyzn[1].y @[Cordic.scala 175:9]
      xyz.x <= xyzn[1].x @[Cordic.scala 175:9]
      skip @[Cordic.scala 172:51]
    node _T_27 = geq(counter, UInt<4>("h0c")) @[Cordic.scala 180:17]
    when _T_27 : @[Cordic.scala 180:40]
      outValid <= UInt<1>("h01") @[Cordic.scala 181:14]
      node _T_28 = and(io.out.ready, io.out.valid) @[Decoupled.scala 37:37]
      when _T_28 : @[Cordic.scala 183:26]
        counter <= UInt<1>("h00") @[Cordic.scala 184:15]
        inReady <= UInt<1>("h01") @[Cordic.scala 185:15]
        outValid <= UInt<1>("h00") @[Cordic.scala 186:16]
        skip @[Cordic.scala 183:26]
      skip @[Cordic.scala 180:40]
    xyzn[0].z <= xyz.z @[Cordic.scala 194:11]
    xyzn[0].y <= xyz.y @[Cordic.scala 194:11]
    xyzn[0].x <= xyz.x @[Cordic.scala 194:11]
    node _T_29 = bits(xyzn[0].y, 17, 17) @[FixedPointTypeClass.scala 181:24]
    node _T_30 = bits(xyzn[0].x, 17, 17) @[FixedPointTypeClass.scala 181:24]
    node _T_31 = xor(_T_29, _T_30) @[Cordic.scala 196:48]
    node _T_32 = eq(xyzn[0].z, asFixedPoint(UInt<1>("h00"), 0)) @[FixedPointTypeClass.scala 179:52]
    node _T_33 = eq(_T_32, UInt<1>("h00")) @[Signed.scala 32:36]
    node _T_34 = bits(xyzn[0].z, 17, 17) @[FixedPointTypeClass.scala 181:24]
    node _T_35 = eq(_T_34, UInt<1>("h00")) @[Signed.scala 32:54]
    node _T_36 = and(_T_33, _T_35) @[Signed.scala 32:51]
    node _T_37 = mux(vecReg, _T_31, _T_36) @[Cordic.scala 196:20]
    node _T_38 = add(counter, UInt<1>("h00")) @[UIntTypeClass.scala 18:40]
    node _T_39 = tail(_T_38, 1) @[UIntTypeClass.scala 18:40]
    node _T_40 = eq(_T_37, UInt<1>("h00")) @[Cordic.scala 198:27]
    node _T_41 = dshr(xyzn[0].y, _T_39) @[FixedPointTypeClass.scala 119:51]
    node _T_42 = add(xyzn[0].x, _T_41) @[FixedPointTypeClass.scala 21:58]
    node _T_43 = tail(_T_42, 1) @[FixedPointTypeClass.scala 21:58]
    node _T_44 = asFixedPoint(_T_43, 15) @[FixedPointTypeClass.scala 21:58]
    node _T_45 = sub(xyzn[0].x, _T_41) @[FixedPointTypeClass.scala 31:68]
    node _T_46 = tail(_T_45, 1) @[FixedPointTypeClass.scala 31:68]
    node _T_47 = asFixedPoint(_T_46, 15) @[FixedPointTypeClass.scala 31:68]
    node _T_48 = mux(_T_40, _T_44, _T_47) @[Cordic.scala 115:8]
    xyzn[1].x <= _T_48 @[Cordic.scala 198:17]
    node _T_49 = dshr(xyzn[0].x, _T_39) @[FixedPointTypeClass.scala 119:51]
    node _T_50 = add(xyzn[0].y, _T_49) @[FixedPointTypeClass.scala 21:58]
    node _T_51 = tail(_T_50, 1) @[FixedPointTypeClass.scala 21:58]
    node _T_52 = asFixedPoint(_T_51, 15) @[FixedPointTypeClass.scala 21:58]
    node _T_53 = sub(xyzn[0].y, _T_49) @[FixedPointTypeClass.scala 31:68]
    node _T_54 = tail(_T_53, 1) @[FixedPointTypeClass.scala 31:68]
    node _T_55 = asFixedPoint(_T_54, 15) @[FixedPointTypeClass.scala 31:68]
    node _T_56 = mux(_T_37, _T_52, _T_55) @[Cordic.scala 115:8]
    xyzn[1].y <= _T_56 @[Cordic.scala 199:17]
    node _T_57 = eq(_T_37, UInt<1>("h00")) @[Cordic.scala 200:27]
    node _T_58 = add(xyzn[0].z, alpha[_T_39]) @[FixedPointTypeClass.scala 21:58]
    node _T_59 = tail(_T_58, 1) @[FixedPointTypeClass.scala 21:58]
    node _T_60 = asFixedPoint(_T_59, 15) @[FixedPointTypeClass.scala 21:58]
    node _T_61 = sub(xyzn[0].z, alpha[_T_39]) @[FixedPointTypeClass.scala 31:68]
    node _T_62 = tail(_T_61, 1) @[FixedPointTypeClass.scala 31:68]
    node _T_63 = asFixedPoint(_T_62, 15) @[FixedPointTypeClass.scala 31:68]
    node _T_64 = mux(_T_57, _T_60, _T_63) @[Cordic.scala 115:8]
    xyzn[1].z <= _T_64 @[Cordic.scala 200:17]
    node _T_65 = mul(xyz.x, asFixedPoint(UInt<16>("h04dba"), 15)) @[FixedPointTypeClass.scala 43:59]
    node xoutCor = mux(UInt<1>("h01"), _T_65, xyz.x) @[Cordic.scala 207:20]
    node _T_66 = mul(xyz.y, asFixedPoint(UInt<16>("h04dba"), 15)) @[FixedPointTypeClass.scala 43:59]
    node youtCor = mux(UInt<1>("h01"), _T_66, xyz.y) @[Cordic.scala 208:20]
    node _T_67 = eq(vecReg, UInt<1>("h00")) @[Cordic.scala 211:24]
    node _T_68 = and(_T_67, extReg) @[Cordic.scala 211:32]
    node _T_69 = mul(asFixedPoint(UInt<1>("h01"), 0), xoutCor) @[FixedPointTypeClass.scala 43:59]
    node _T_70 = mux(_T_68, _T_69, xoutCor) @[Cordic.scala 211:23]
    io.out.bits.x <= _T_70 @[Cordic.scala 211:17]
    node _T_71 = eq(vecReg, UInt<1>("h00")) @[Cordic.scala 212:24]
    node _T_72 = and(_T_71, extReg) @[Cordic.scala 212:32]
    node _T_73 = mul(asFixedPoint(UInt<1>("h01"), 0), youtCor) @[FixedPointTypeClass.scala 43:59]
    node _T_74 = mux(_T_72, _T_73, youtCor) @[Cordic.scala 212:23]
    io.out.bits.y <= _T_74 @[Cordic.scala 212:17]
    node _T_75 = and(vecReg, extReg) @[Cordic.scala 216:31]
    node _T_76 = sub(xyz.z, asFixedPoint(UInt<18>("h019220"), 15)) @[FixedPointTypeClass.scala 31:68]
    node _T_77 = tail(_T_76, 1) @[FixedPointTypeClass.scala 31:68]
    node _T_78 = asFixedPoint(_T_77, 15) @[FixedPointTypeClass.scala 31:68]
    node _T_79 = add(xyz.z, asFixedPoint(UInt<18>("h019220"), 15)) @[FixedPointTypeClass.scala 21:58]
    node _T_80 = tail(_T_79, 1) @[FixedPointTypeClass.scala 21:58]
    node _T_81 = asFixedPoint(_T_80, 15) @[FixedPointTypeClass.scala 21:58]
    node _T_82 = mux(bottomReg, _T_78, _T_81) @[Cordic.scala 216:45]
    node _T_83 = mux(_T_75, _T_82, xyz.z) @[Cordic.scala 216:23]
    io.out.bits.z <= _T_83 @[Cordic.scala 216:17]
    
