module IterativeCordic {
  input reset : boolean;
  output io_in_ready : boolean;
  input io_in_valid : boolean;
  input io_in_bits_x : bv12;
  input io_in_bits_y : bv12;
  input io_in_bits_z : bv12;
  input io_in_bits_vectoring : boolean;
  input io_out_ready : boolean;
  output io_out_valid : boolean;
  output io_out_bits_x : bv12;
  output io_out_bits_y : bv12;
  output io_out_bits_z : bv12;
  // Registers
  var vecReg : boolean;
  var xyz_x : bv18;
  var xyz_y : bv18;
  var xyz_z : bv18;
  var counter : bv4;
  var extReg : boolean;
  var bottomReg : boolean;
  var inReady : boolean;
  var outValid : boolean;
  // Memories
  // Wires
  // Nodes
  var _T : boolean;
  var _T_1 : boolean;
  var _T_3 : bv12;
  var _T_4 : bv12;
  var _T_5 : bv12;
  var _GEN_29 : bv18;
  var _T_6 : boolean;
  var ext : boolean;
  var _T_7 : boolean;
  var bottom : boolean;
  var _T_9 : boolean;
  var _T_10 : bv13;
  var _T_11 : bv13;
  var _T_12 : bv13;
  var _T_13 : bv13;
  var _T_14 : bv13;
  var _T_15 : bv13;
  var _T_16 : bv18;
  var _T_17 : bv18;
  var _GEN_30 : bv18;
  var _T_19 : bv18;
  var _T_20 : bv18;
  var _T_21 : bv18;
  var _GEN_0 : boolean;
  var _GEN_4 : bv18;
  var _GEN_5 : bv18;
  var _GEN_6 : bv18;
  var _T_22 : boolean;
  var _T_23 : boolean;
  var _T_24 : boolean;
  var _T_26 : bv4;
  var _GEN_7 : bv4;
  var _T_29 : boolean;
  var _T_30 : boolean;
  var _T_31 : boolean;
  var _T_32 : boolean;
  var _T_33 : boolean;
  var _T_34 : boolean;
  var _T_35 : boolean;
  var _T_36 : boolean;
  var _T_37 : boolean;
  var _T_57 : boolean;
  var _T_38 : bv5;
  var _T_39 : bv4;
  var _GEN_18 : bv16;
  var _GEN_19 : bv16;
  var _GEN_20 : bv16;
  var _GEN_21 : bv16;
  var _GEN_22 : bv16;
  var _GEN_23 : bv16;
  var _GEN_24 : bv16;
  var _GEN_25 : bv16;
  var _GEN_26 : bv16;
  var _GEN_27 : bv16;
  var _GEN_28 : bv16;
  var _GEN_31 : bv18;
  var _T_59 : bv18;
  var _T_60 : bv18;
  var _T_62 : bv18;
  var _T_63 : bv18;
  var xyzn_1_z : bv18;
  var _T_49 : bv18;
  var _T_51 : bv18;
  var _T_52 : bv18;
  var _T_54 : bv18;
  var _T_55 : bv18;
  var xyzn_1_y : bv18;
  var _T_41 : bv18;
  var _T_43 : bv18;
  var _T_44 : bv18;
  var _T_46 : bv18;
  var _T_47 : bv18;
  var xyzn_1_x : bv18;
  var _T_27 : boolean;
  var _T_28 : boolean;
  var _GEN_11 : bv4;
  var _GEN_12 : boolean;
  var _GEN_13 : boolean;
  var _GEN_14 : boolean;
  var _GEN_15 : bv4;
  var _GEN_16 : boolean;
  var xoutCor : bv34;
  var youtCor : bv34;
  var _T_67 : boolean;
  var _T_68 : boolean;
  var _T_69 : bv35;
  var _T_70 : bv35;
  var _T_73 : bv35;
  var _T_74 : bv35;
  var _T_75 : boolean;
  var _T_77 : bv18;
  var _T_78 : bv18;
  var _T_80 : bv18;
  var _T_81 : bv18;
  var _T_82 : bv18;
  var _T_83 : bv18;
  var _GEN_33 : bv15;
  var _GEN_34 : bv12;
  var _GEN_35 : bv15;
  var _GEN_36 : bv12;
  var vecReg_next : boolean;
  var xyz_x_next : bv18;
  var xyz_y_next : bv18;
  var xyz_z_next : bv18;
  var counter_next : bv4;
  var extReg_next : boolean;
  var bottomReg_next : boolean;
  var inReady_next : boolean;
  var outValid_next : boolean;
  // Init
  init {
    _T = io_in_bits_x[11:11] == 1bv1;
    _T_1 = io_in_bits_z[11:11] == 1bv1;
    _T_3 = 0bv12 - io_in_bits_z;
    _T_4 = _T_3;
    _T_5 = if (_T_1) then (_T_4) else (io_in_bits_z);
    _GEN_29 = _T_5 ++ 0bv6;
    _T_6 = _GEN_29 > 51472bv18;
    ext = if (io_in_bits_vectoring) then (_T) else (_T_6);
    _T_7 = io_in_bits_y[11:11] == 1bv1;
    bottom = if (io_in_bits_vectoring) then (_T_7) else (_T_1);
    _T_9 = io_in_ready && io_in_valid;
    _T_10 = bv_sign_extend(1, -1bv12) * bv_sign_extend(1, io_in_bits_y);
    _T_11 = if (bottom) then (_T_10) else (bv_sign_extend(1, io_in_bits_y));
    _T_12 = if (ext) then (_T_11) else (bv_sign_extend(1, io_in_bits_x));
    _T_13 = bv_sign_extend(1, -1bv12) * bv_sign_extend(1, io_in_bits_x);
    _T_14 = if (bottom) then (bv_sign_extend(1, io_in_bits_x)) else (_T_13);
    _T_15 = if (ext) then (_T_14) else (bv_sign_extend(1, io_in_bits_y));
    _T_16 = bv_sign_extend(1, -1bv17) * bv_sign_extend(1, 51472bv17);
    _T_17 = if (bottom) then (51472bv18) else (_T_16);
    _GEN_30 = io_in_bits_z ++ 0bv6;
    _T_19 = _T_17 + _GEN_30;
    _T_20 = _T_19;
    _T_21 = if (ext) then (_T_20) else (io_in_bits_z ++ 0bv6);
    _GEN_0 = if (_T_9) then (false) else (inReady);
    _GEN_4 = if (_T_9) then (_T_12 ++ 0bv5) else (xyz_x);
    _GEN_5 = if (_T_9) then (_T_15 ++ 0bv5) else (xyz_y);
    _GEN_6 = if (_T_9) then (_T_21) else (xyz_z);
    _T_22 = inReady == false;
    _T_23 = counter < 12bv4;
    _T_24 = _T_22 && _T_23;
    _T_26 = counter + 1bv4;
    _GEN_7 = if (_T_24) then (_T_26) else (counter);
    _T_29 = xyz_y[17:17] == 1bv1;
    _T_30 = xyz_x[17:17] == 1bv1;
    _T_31 = (_T_29 && !_T_30) || (!_T_29 && _T_30);
    _T_32 = xyz_z == 0bv18;
    _T_33 = _T_32 == false;
    _T_34 = xyz_z[17:17] == 1bv1;
    _T_35 = _T_34 == false;
    _T_36 = _T_33 && _T_35;
    _T_37 = if (vecReg) then (_T_31) else (_T_36);
    _T_57 = _T_37 == false;
    _T_38 = bv_zero_extend(1, counter);
    _T_39 = _T_38[3:0];
    _GEN_18 = if (1bv4 == _T_39) then (15193bv16) else (25736bv16);
    _GEN_19 = if (2bv4 == _T_39) then (8027bv16) else (_GEN_18);
    _GEN_20 = if (3bv4 == _T_39) then (4075bv16) else (_GEN_19);
    _GEN_21 = if (4bv4 == _T_39) then (2045bv16) else (_GEN_20);
    _GEN_22 = if (5bv4 == _T_39) then (1024bv16) else (_GEN_21);
    _GEN_23 = if (6bv4 == _T_39) then (512bv16) else (_GEN_22);
    _GEN_24 = if (7bv4 == _T_39) then (256bv16) else (_GEN_23);
    _GEN_25 = if (8bv4 == _T_39) then (128bv16) else (_GEN_24);
    _GEN_26 = if (9bv4 == _T_39) then (64bv16) else (_GEN_25);
    _GEN_27 = if (10bv4 == _T_39) then (32bv16) else (_GEN_26);
    _GEN_28 = if (11bv4 == _T_39) then (16bv16) else (_GEN_27);
    _GEN_31 = bv_sign_extend(2, _GEN_28);
    _T_59 = xyz_z + _GEN_31;
    _T_60 = _T_59;
    _T_62 = xyz_z - _GEN_31;
    _T_63 = _T_62;
    xyzn_1_z = if (_T_57) then (_T_60) else (_T_63);
    _T_49 = bv_a_right_shift(bv_zero_extend(14, _T_39), xyz_x);
    _T_51 = xyz_y + _T_49;
    _T_52 = _T_51;
    _T_54 = xyz_y - _T_49;
    _T_55 = _T_54;
    xyzn_1_y = if (_T_37) then (_T_52) else (_T_55);
    _T_41 = bv_a_right_shift(bv_zero_extend(14, _T_39), xyz_y);
    _T_43 = xyz_x + _T_41;
    _T_44 = _T_43;
    _T_46 = xyz_x - _T_41;
    _T_47 = _T_46;
    xyzn_1_x = if (_T_57) then (_T_44) else (_T_47);
    _T_27 = counter >= 12bv4;
    _T_28 = io_out_ready && io_out_valid;
    _GEN_11 = if (_T_28) then (0bv4) else (_GEN_7);
    _GEN_12 = if (_T_28) then (true) else (_GEN_0);
    _GEN_13 = if (_T_28) then (false) else (true);
    _GEN_14 = if (_T_27) then (_GEN_13) else (outValid);
    _GEN_15 = if (_T_27) then (_GEN_11) else (_GEN_7);
    _GEN_16 = if (_T_27) then (_GEN_12) else (_GEN_0);
    xoutCor = bv_sign_extend(16, xyz_x) * bv_sign_extend(16, 19898bv18);
    youtCor = bv_sign_extend(16, xyz_y) * bv_sign_extend(16, 19898bv18);
    _T_67 = vecReg == false;
    _T_68 = _T_67 && extReg;
    _T_69 = bv_sign_extend(1, -1bv34) * bv_sign_extend(1, xoutCor);
    _T_70 = if (_T_68) then (_T_69) else (bv_sign_extend(1, xoutCor));
    _T_73 = bv_sign_extend(1, -1bv34) * bv_sign_extend(1, youtCor);
    _T_74 = if (_T_68) then (_T_73) else (bv_sign_extend(1, youtCor));
    _T_75 = vecReg && extReg;
    _T_77 = xyz_z - 102944bv18;
    _T_78 = _T_77;
    _T_80 = xyz_z + 102944bv18;
    _T_81 = _T_80;
    _T_82 = if (bottomReg) then (_T_78) else (_T_81);
    _T_83 = if (_T_75) then (_T_82) else (xyz_z);
    _GEN_33 = _T_70[34:20];
    _GEN_34 = _GEN_33[11:0];
    _GEN_35 = _T_74[34:20];
    _GEN_36 = _GEN_35[11:0];
    vecReg_next = if (_T_9) then (io_in_bits_vectoring) else (vecReg);
    xyz_x_next = if (_T_24) then (xyzn_1_x) else (_GEN_4);
    xyz_y_next = if (_T_24) then (xyzn_1_y) else (_GEN_5);
    xyz_z_next = if (_T_24) then (xyzn_1_z) else (_GEN_6);
    counter_next = if (reset) then (0bv4) else (_GEN_15);
    extReg_next = if (_T_9) then (ext) else (extReg);
    bottomReg_next = if (_T_9) then (bottom) else (bottomReg);
    inReady_next = if (reset) then (true) else (_GEN_16);
    outValid_next = if (reset) then (false) else (_GEN_14);
    io_in_ready = inReady;
    io_out_valid = outValid;
    io_out_bits_x = _GEN_34;
    io_out_bits_y = _GEN_36;
    io_out_bits_z = _T_83[17:6];
  }
  // Mem Writes
  next {
    // Clock High
    vecReg' = vecReg_next;
    xyz_x' = xyz_x_next;
    xyz_y' = xyz_y_next;
    xyz_z' = xyz_z_next;
    counter' = counter_next;
    extReg' = extReg_next;
    bottomReg' = bottomReg_next;
    inReady' = inReady_next;
    outValid' = outValid_next;
    // Clock Low
    _T' = io_in_bits_x'[11:11] == 1bv1;
    _T_1' = io_in_bits_z'[11:11] == 1bv1;
    _T_3' = 0bv12 - io_in_bits_z';
    _T_4' = _T_3';
    _T_5' = if (_T_1') then (_T_4') else (io_in_bits_z');
    _GEN_29' = _T_5' ++ 0bv6;
    _T_6' = _GEN_29' > 51472bv18;
    ext' = if (io_in_bits_vectoring') then (_T') else (_T_6');
    _T_7' = io_in_bits_y'[11:11] == 1bv1;
    bottom' = if (io_in_bits_vectoring') then (_T_7') else (_T_1');
    _T_9' = io_in_ready' && io_in_valid';
    _T_10' = bv_sign_extend(1, -1bv12) * bv_sign_extend(1, io_in_bits_y');
    _T_11' = if (bottom') then (_T_10') else (bv_sign_extend(1, io_in_bits_y'));
    _T_12' = if (ext') then (_T_11') else (bv_sign_extend(1, io_in_bits_x'));
    _T_13' = bv_sign_extend(1, -1bv12) * bv_sign_extend(1, io_in_bits_x');
    _T_14' = if (bottom') then (bv_sign_extend(1, io_in_bits_x')) else (_T_13');
    _T_15' = if (ext') then (_T_14') else (bv_sign_extend(1, io_in_bits_y'));
    _T_16' = bv_sign_extend(1, -1bv17) * bv_sign_extend(1, 51472bv17);
    _T_17' = if (bottom') then (51472bv18) else (_T_16');
    _GEN_30' = io_in_bits_z' ++ 0bv6;
    _T_19' = _T_17' + _GEN_30';
    _T_20' = _T_19';
    _T_21' = if (ext') then (_T_20') else (io_in_bits_z' ++ 0bv6);
    _GEN_0' = if (_T_9') then (false) else (inReady');
    _GEN_4' = if (_T_9') then (_T_12' ++ 0bv5) else (xyz_x');
    _GEN_5' = if (_T_9') then (_T_15' ++ 0bv5) else (xyz_y');
    _GEN_6' = if (_T_9') then (_T_21') else (xyz_z');
    _T_22' = inReady' == false;
    _T_23' = counter' < 12bv4;
    _T_24' = _T_22' && _T_23';
    _T_26' = counter' + 1bv4;
    _GEN_7' = if (_T_24') then (_T_26') else (counter');
    _T_29' = xyz_y'[17:17] == 1bv1;
    _T_30' = xyz_x'[17:17] == 1bv1;
    _T_31' = (_T_29' && !_T_30') || (!_T_29' && _T_30');
    _T_32' = xyz_z' == 0bv18;
    _T_33' = _T_32' == false;
    _T_34' = xyz_z'[17:17] == 1bv1;
    _T_35' = _T_34' == false;
    _T_36' = _T_33' && _T_35';
    _T_37' = if (vecReg') then (_T_31') else (_T_36');
    _T_57' = _T_37' == false;
    _T_38' = bv_zero_extend(1, counter');
    _T_39' = _T_38'[3:0];
    _GEN_18' = if (1bv4 == _T_39') then (15193bv16) else (25736bv16);
    _GEN_19' = if (2bv4 == _T_39') then (8027bv16) else (_GEN_18');
    _GEN_20' = if (3bv4 == _T_39') then (4075bv16) else (_GEN_19');
    _GEN_21' = if (4bv4 == _T_39') then (2045bv16) else (_GEN_20');
    _GEN_22' = if (5bv4 == _T_39') then (1024bv16) else (_GEN_21');
    _GEN_23' = if (6bv4 == _T_39') then (512bv16) else (_GEN_22');
    _GEN_24' = if (7bv4 == _T_39') then (256bv16) else (_GEN_23');
    _GEN_25' = if (8bv4 == _T_39') then (128bv16) else (_GEN_24');
    _GEN_26' = if (9bv4 == _T_39') then (64bv16) else (_GEN_25');
    _GEN_27' = if (10bv4 == _T_39') then (32bv16) else (_GEN_26');
    _GEN_28' = if (11bv4 == _T_39') then (16bv16) else (_GEN_27');
    _GEN_31' = bv_sign_extend(2, _GEN_28');
    _T_59' = xyz_z' + _GEN_31';
    _T_60' = _T_59';
    _T_62' = xyz_z' - _GEN_31';
    _T_63' = _T_62';
    xyzn_1_z' = if (_T_57') then (_T_60') else (_T_63');
    _T_49' = bv_a_right_shift(bv_zero_extend(14, _T_39'), xyz_x');
    _T_51' = xyz_y' + _T_49';
    _T_52' = _T_51';
    _T_54' = xyz_y' - _T_49';
    _T_55' = _T_54';
    xyzn_1_y' = if (_T_37') then (_T_52') else (_T_55');
    _T_41' = bv_a_right_shift(bv_zero_extend(14, _T_39'), xyz_y');
    _T_43' = xyz_x' + _T_41';
    _T_44' = _T_43';
    _T_46' = xyz_x' - _T_41';
    _T_47' = _T_46';
    xyzn_1_x' = if (_T_57') then (_T_44') else (_T_47');
    _T_27' = counter' >= 12bv4;
    _T_28' = io_out_ready' && io_out_valid';
    _GEN_11' = if (_T_28') then (0bv4) else (_GEN_7');
    _GEN_12' = if (_T_28') then (true) else (_GEN_0');
    _GEN_13' = if (_T_28') then (false) else (true);
    _GEN_14' = if (_T_27') then (_GEN_13') else (outValid');
    _GEN_15' = if (_T_27') then (_GEN_11') else (_GEN_7');
    _GEN_16' = if (_T_27') then (_GEN_12') else (_GEN_0');
    xoutCor' = bv_sign_extend(16, xyz_x') * bv_sign_extend(16, 19898bv18);
    youtCor' = bv_sign_extend(16, xyz_y') * bv_sign_extend(16, 19898bv18);
    _T_67' = vecReg' == false;
    _T_68' = _T_67' && extReg';
    _T_69' = bv_sign_extend(1, -1bv34) * bv_sign_extend(1, xoutCor');
    _T_70' = if (_T_68') then (_T_69') else (bv_sign_extend(1, xoutCor'));
    _T_73' = bv_sign_extend(1, -1bv34) * bv_sign_extend(1, youtCor');
    _T_74' = if (_T_68') then (_T_73') else (bv_sign_extend(1, youtCor'));
    _T_75' = vecReg' && extReg';
    _T_77' = xyz_z' - 102944bv18;
    _T_78' = _T_77';
    _T_80' = xyz_z' + 102944bv18;
    _T_81' = _T_80';
    _T_82' = if (bottomReg') then (_T_78') else (_T_81');
    _T_83' = if (_T_75') then (_T_82') else (xyz_z');
    _GEN_33' = _T_70'[34:20];
    _GEN_34' = _GEN_33'[11:0];
    _GEN_35' = _T_74'[34:20];
    _GEN_36' = _GEN_35'[11:0];
    vecReg_next' = if (_T_9') then (io_in_bits_vectoring') else (vecReg');
    xyz_x_next' = if (_T_24') then (xyzn_1_x') else (_GEN_4');
    xyz_y_next' = if (_T_24') then (xyzn_1_y') else (_GEN_5');
    xyz_z_next' = if (_T_24') then (xyzn_1_z') else (_GEN_6');
    counter_next' = if (reset') then (0bv4) else (_GEN_15');
    extReg_next' = if (_T_9') then (ext') else (extReg');
    bottomReg_next' = if (_T_9') then (bottom') else (bottomReg');
    inReady_next' = if (reset') then (true) else (_GEN_16');
    outValid_next' = if (reset') then (false) else (_GEN_14');
    io_in_ready' = inReady';
    io_out_valid' = outValid';
    io_out_bits_x' = _GEN_34';
    io_out_bits_y' = _GEN_36';
    io_out_bits_z' = _T_83'[17:6];
  }
}
